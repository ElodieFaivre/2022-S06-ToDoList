!function(){var e={base_url:"http://localhost:5050",hideModals:function(){const e=document.querySelectorAll(".modal");for(const t of e)t.classList.remove("is-active")}};const t={showAddTagModal:function(e){const t=e.target.closest(".box").getAttribute("data-card-id"),o=document.getElementById("addTagModal");o.querySelector(".input-card_id").value=t,o.classList.add("is-active")},handleAddTagToCardForm:async function(o){o.preventDefault();const a=new FormData(o.target),r=a.get("card_id"),s=[];for(let e=0;e<50;e++)a.get(`tags[${e}]`)&&s.push(a.get(`tags[${e}]`));try{if(s)for(const o of s){const a=new FormData;a.append("id",o);const s=await fetch(`${e.base_url}/cards/${r}/tags`,{method:"POST",body:a}),n=(await s.json()).tags.find(e=>e.id==o);console.log("tag trouv\xe9",n),t.makeTagInDOM(n)}e.hideModals()}catch(n){console.error(n),alert("erreur lors ajout tag \xe0 une carte")}},makeTagInDOM:function(e){const o=document.createElement("a");o.classList.add("tag"),o.classList.add("is-small"),o.dataset.tagId=e.id,o.textContent=e.name,o.style.backgroundColor=e.color,document.querySelector(`.box[data-card-id="${e.card_has_tag.card_id}"] .tags`).appendChild(o);const a=document.createElement("span");a.classList.add("icon","is-small"),a.style.marginLeft="0.5rem",o.appendChild(a);const r=document.createElement("i");r.classList.add("fas","fa-trash-alt"),a.appendChild(r),a.addEventListener("click",t.removeTagOnCard)},removeTagOnCard:async function(t){const o=t.target.closest(".box[data-card-id]").dataset.cardId,a=t.target.closest("*[data-tag-id]"),r=a.dataset.tagId;try{await fetch(`${e.base_url}/cards/${o}/tags/${r}`,{method:"DELETE"}),a.remove()}catch(s){console.error(s),alert("Erreur lors de la suppression du tag")}}};var o=t;const a={showAddCardModal:function(e){const t=e.target.closest(".panel").getAttribute("data-list-id"),o=document.getElementById("addCardModal");o.querySelector(".input-list_id").value=t,o.classList.add("is-active")},handleAddCardForm:async function(t){try{t.preventDefault();const r=new FormData(t.target),s=await fetch(e.base_url+"/cards",{method:"POST",body:r});if("201"==s.status){const n=await s.json();t.target.querySelector('input[name="content"]').value="",t.target.querySelector('input[name="color"]').value="#D9C3C3";const d=n.id,l=[];for(let e=0;e<50;e++)r.get(`tags[${e}]`)&&l.push(r.get(`tags[${e}]`));if(console.log("cardId",d),console.log("tagsId",l),a.makeCardInDOM(n),l)for(const t of l){const a=new FormData;a.append("id",t);const r=await fetch(`${e.base_url}/cards/${d}/tags`,{method:"POST",body:a}),s=(await r.json()).tags.find(e=>e.id==t);console.log(s),o.makeTagInDOM(s)}e.hideModals()}else alert("erreur lors de lajout dune carte")}catch(r){console.error(r),alert("erreur lors ajout dune carte")}},handleEditCardForm:async function(t){try{t.preventDefault();const o=new FormData(t.target),a=o.get("card-id");if(!o.get("content"))return alert("le nom ne peut pas \xeatre vide");const r=t.target.closest(".columns").querySelector(".card-title"),s=t.target.closest(".columns").querySelector(".is-narrow"),n=await fetch(`${e.base_url}/cards/${a}`,{method:"PATCH",body:o});if("200"==n.status){const e=await n.json();console.log(e),r.textContent=e.content,t.target.closest(".box").style.backgroundColor=e.color}else alert("erreur sur le fetch patch update carte");t.target.classList.toggle("is-hidden"),r.classList.toggle("is-hidden"),s.classList.toggle("is-hidden")}catch(o){console.error(o),alert("erreur lors modif dune carte")}},handleDeleteCard:async function(t){try{if(confirm("Etes vous s\xfbr de vouloir supprimer la carte ?")){const o=t.target.closest(".box").dataset.cardId;console.log(o);const a=await fetch(`${e.base_url}/cards/${o}`,{method:"DELETE"});console.log(a.status),"204"==!a.status?alert("erreur sur le fetch delete de la carte"):t.target.closest(".box").remove()}}catch(o){console.error(o),alert("erreur lors de la suppression de la carte")}},makeCardInDOM:function(e){const t=document.getElementById("newCardTemplate").content;console.log("cardListID,",e.list_id);const r=document.querySelector(`.panel[data-list-id="${e.list_id}"]`);console.log("list qui bug recuper\xe9e du DOM",r);const s=r.querySelector(".panel-block"),n=t.cloneNode(!0),d=n.querySelector(".box");d.dataset.cardId=e.id,""==!e.color&&(d.style.backgroundColor=e.color),n.querySelector(".card-title").textContent=e.content,n.querySelector(".has-text-primary").addEventListener("click",a.showFormToEditCard),n.querySelector(".has-text-danger").addEventListener("click",a.handleDeleteCard);const l=n.querySelector("form");l.querySelector("input[name=card-id]").value=e.id,l.querySelector("input[name=content]").value=e.content,""==!e.color&&(l.querySelector("input[name=color]").value=e.color),l.addEventListener("submit",a.handleEditCardForm),l.querySelector(".close").addEventListener("click",a.closeEditCardForm),n.querySelector(".add-tag").addEventListener("click",o.showAddTagModal),s.appendChild(n)},showFormToEditCard:function(e){const t=e.target.closest(".columns"),o=t.querySelector(".card-title"),a=t.querySelector(".is-narrow"),r=t.querySelector("form");o.classList.toggle("is-hidden"),a.classList.toggle("is-hidden"),r.classList.remove("is-hidden")},closeEditCardForm:function(e){e.target.closest("form").classList.add("is-hidden"),e.target.closest(".columns").querySelector(".card-title").classList.remove("is-hidden"),e.target.closest(".columns").querySelector(".is-narrow").classList.remove("is-hidden")},moveCards:async function(t){t.forEach(async(t,o)=>{const a=t.dataset.cardId,r=t.closest(".panel").dataset.listId,s=new FormData;s.append("position",o),s.append("list_id",r);try{await fetch(`${e.base_url}/cards/${a}`,{method:"PATCH",body:s})}catch(n){console.error(n),alert("erreur deplacement carte")}})},onCardDrop:async function(e){const t=e.from,o=e.to;let r=t.querySelectorAll(".box");await a.moveCards(r),r=o.querySelectorAll(".box"),await a.moveCards(r)}};var r=a;const s={showAddListModal:function(){document.getElementById("addListModal").classList.add("is-active")},handleAddListForm:async function(t){try{t.preventDefault();const o=new FormData(t.target);if(!o.get("name"))return alert("Le nom de la liste ne doit pas \xeatre vide !");const a=await fetch(e.base_url+"/lists",{method:"POST",body:o});if("201"==a.status){const t=await a.json();s.makeListInDOM(t),e.hideModals()}else alert("erreur sur le fetch post create liste")}catch(o){console.error(o),alert("erreur lors ajout dune liste")}},handleEditListForm:async function(t){t.preventDefault();const o=new FormData(t.target),a=o.get("list-id");if(!o.get("name"))return alert("Le nom de la liste ne peut pas \xeatre vide");console.log(a);const r=t.target.closest(".column").querySelector("h2");try{const s=await fetch(`${e.base_url}/lists/${a}`,{method:"PATCH",body:o});if("200"==s.status){const e=await s.json();console.log(e),r.textContent=e.name}else alert("erreur sur le fetch patch update liste");t.target.classList.add("is-hidden"),r.classList.remove("is-hidden")}catch(s){console.error(s),alert("erreur lors modif dune liste")}},handleDeleteList:async function(t){try{if(!confirm("Etes vous s\xfbr de vouloir supprimer la liste et toutes ses cartes ?"))return;{const o=t.target.closest("*[data-list-id]").dataset.listId;console.log(o);const a=await fetch(`${e.base_url}/lists/${o}`,{method:"DELETE"});console.log(a.status),"204"==!a.status?alert("erreur sur le fetch delete de la liste"):t.target.closest("*[data-list-id]").remove()}}catch(o){console.error(o),alert("erreur lors de la suppression de la liste")}},makeListInDOM:function(e){const t=document.getElementById("newListTemplate").content,o=document.querySelector(".card-lists"),a=t.cloneNode(!0);a.querySelector("h2").textContent=e.name,a.querySelector(".panel").dataset.listId=e.id,a.querySelector(".addCardButton").addEventListener("click",r.showAddCardModal),a.querySelector(".list-delete-btn").addEventListener("click",s.handleDeleteList),a.querySelector("h2").addEventListener("dblclick",s.showFormToEditList);const n=a.querySelector("form");n.querySelector("input[name=list-id]").value=e.id,n.querySelector("input[name=name]").value=e.name,n.addEventListener("submit",s.handleEditListForm),n.querySelector(".close").addEventListener("click",s.closeEditListForm);const d=a.querySelector(".cardPanel");d.id="cardPanel"+e.id,Sortable.create(d,{group:"shared",darggable:".box",onEnd:r.onCardDrop}),o.appendChild(a)},showFormToEditList:function(e){const t=e.target.closest(".column"),o=t.querySelector("h2"),a=t.querySelector("form");o.classList.toggle("is-hidden"),a.classList.toggle("is-hidden")},closeEditListForm:function(e){e.target.closest("form").classList.add("is-hidden"),e.target.closest(".column").querySelector("h2").classList.remove("is-hidden")},moveLists:async function(t){document.querySelectorAll(".panel[data-list-id]").forEach(async(t,o)=>{const a=t.dataset.listId,r=new FormData;r.append("position",o);try{await fetch(`${e.base_url}/lists/${a}`,{method:"PATCH",body:r})}catch(s){console.error(s),alert("erreur deplacement lists")}})}};var n=s;const d={init:function(){d.addListenerToActions(),d.getListsFromAPI(),d.getTagsFromAPI()},getListsFromAPI:async function(){try{const t=await fetch(e.base_url+"/lists"),a=await t.json();console.log("listes recuperer dans getListsFromAPI",a);for(const e of a){console.log("list qui bug dans le for",e),n.makeListInDOM(e);for(const t of e.cards){r.makeCardInDOM(t);for(const e of t.tags)o.makeTagInDOM(e)}}}catch(t){console.error(t),alert("erreur recuperation listes")}},getTagsFromAPI:async function(){try{const t=await fetch(e.base_url+"/tags",{method:"GET"}),o=await t.json();console.log("TAGS",o);const a=document.querySelector("#addCardModal form"),r=document.querySelector("#addTagModal form");for(const e of o){const t=document.createElement("input");t.setAttribute("type","checkbox"),t.setAttribute("name",`tags[${e.id}]`),t.setAttribute("value",e.id),t.setAttribute("id",e.id);const o=document.createElement("label");o.setAttribute("for",e.id),o.classList.add("tag"),o.textContent=e.name,o.style.backgroundColor=e.color,a.querySelector(".tags-form").appendChild(t),a.querySelector(".tags-form").appendChild(o);const s=document.createElement("input");s.setAttribute("type","checkbox"),s.setAttribute("name",`tags[${e.id}]`),s.setAttribute("value",e.id),s.setAttribute("id",e.id);const n=document.createElement("label");n.setAttribute("for",e.id),n.classList.add("tag"),n.textContent=e.name,n.style.backgroundColor=e.color,r.querySelector(".tags-list-form").appendChild(s),r.querySelector(".tags-list-form").appendChild(n)}}catch(t){console.error(t),alert("erreur recuperation tags")}},addListenerToActions:function(){document.getElementById("addListButton").addEventListener("click",n.showAddListModal);const t=document.querySelectorAll(".close");for(const o of t)o.addEventListener("click",e.hideModals);document.querySelector("#addListModal form").addEventListener("submit",n.handleAddListForm),document.querySelector("#addCardModal form").addEventListener("submit",r.handleAddCardForm),document.querySelector("#addTagModal form").addEventListener("submit",o.handleAddTagToCardForm),listPanel=document.querySelector("#listPanel"),Sortable.create(listPanel,{draggable:".panel",onEnd:n.moveLists})}};document.addEventListener("DOMContentLoaded",d.init)}();